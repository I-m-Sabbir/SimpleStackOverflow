@model PostUpdateModel
@using Microsoft.AspNetCore.Identity
@using SimpleStackOverflow.Infrastructure.Entities.Membership
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}
@section Styles {
    <!-- include summernote css -->
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.css" rel="stylesheet">
}
    <br />
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">@Model.Posts.Title</h3>
            <div class="card-tools">
                <span class="badge badge-secondary">@Model.Posts.Author.FirstName @Model.Posts.Author.LastName</span>
                <span class="badge badge-primary">Asked on @Model.Posts.CreateTime.ToString("MMMM dd, yyyy")</span>
            </div>
        </div>
        <div class="card-body">
            @Html.Raw(@Model.Posts.Description)
        </div>
        <div class="card-footer">
            @{
            if (Model.Posts.Comments!.Count > 0)
            {
                <h4>@Model.Posts.Comments!.Count Answers</h4>
                foreach (var comment in Model.Posts.Comments)
                {

                    <div class="callout callout-danger">
                        <h5>
                            @if (comment.IsVerified)
                            {
                                <i class="fa fa-check text-success"></i>
                            }
                            @comment.Author.FirstName @comment.Author.LastName
                            @if (User!.Identity!.Name == Model.Posts.Author.UserName && !comment.IsVerified)
                            {
                                <form asp-action="Verify" asp-controller="Comment" method="post" asp-antiforgery="true">
                                    <input type="text" name="commentId" value="@comment.Id" readonly hidden />
                                    <input type="text" name="postId" value="@Model.Posts.Id" readonly hidden />
                                    <input type="submit" class="btn btn-success btn-sm rounded float-right" value="Accept Answer" />
                                </form>
                            }
                            else if (User!.Identity!.Name == Model.Posts.Author.UserName && comment.IsVerified)
                            {
                                <form asp-action="Cencel" asp-controller="Comment" method="post" asp-antiforgery="true">
                                    <input type="text" name="commentId" value="@comment.Id" readonly hidden />
                                    <input type="text" name="postId" value="@Model.Posts.Id" readonly hidden />
                                    <input type="submit" class="btn btn-danger btn-sm rounded float-right" value="Cencel" />
                                </form>
                            }
                            else
                            {

                            }
                            @if (!comment.Votes.Select(s => s.Author.UserName).Contains(User.Identity.Name))
                            {
                                <form asp-action="CommentVote" asp-controller="Vote" method="post" asp-antiforgery="true">
                                    <input type="text" name="commentId" value="@comment.Id" readonly hidden />
                                    <input type="text" name="postId" value="@Model.Posts.Id" readonly hidden />
                                    <button type="submit" class="btn btn-warning btn-sm rounded float-right"><i class="fa fa-thumbs-up" aria-hidden="true">Vote</i></button>
                                </form>
                            }
                            else if (comment.Votes.Select(s => s.Author.UserName).Contains(User.Identity.Name)){
                                <form asp-action="CencelCommentVote" asp-controller="Vote" method="post" asp-antiforgery="true">
                                    <input type="text" name="commentId" value="@comment.Id" readonly hidden />
                                    <input type="text" name="postId" value="@Model.Posts.Id" readonly hidden />
                                    <button type="submit" class="btn btn-warning btn-sm rounded float-right"><i class="fa fa-thumbs-down" aria-hidden="true">Cencel Vote</i></button>
                                </form>
                            }
                        </h5>
                        <small class="label-rating text-muted">
                            Votes: @comment.Votes!.Count
                        </small>
                        <br />
                        @Html.Raw(comment.CommentText)
                    </div>
                }
            }
        }
        <br />
        <br />
        <form asp-action="Create" asp-controller="Comment" method="post" asp-antiforgery="true">
            <input asp-for="Posts.Id" name="postId" hidden />
            <textarea id="summernote" name="commentText">

            </textarea>
            <div class="text-right">
                <input type="submit" value="Comment" class="btn btn-success rounded" />
            </div>
        </form>
    </div>
</div>

@section Scripts
    {
    <!-- include summernote js -->
    <script src="~/admin/custom/bootstraptagsinput.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote-lite.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#summernote").summernote({
                placeholder: "Write your content here",
                tabsize: 2,
                height: 200
            });
            $('.dropdown-toggle').dropdown();
        });
    </script>
}